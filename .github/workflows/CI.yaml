# ðŸª¶ Hazel: Easy to use read-only proxy to map objects to URLs
# Copyright 2022-2025 Noelware, LLC. <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI
on:
    workflow_dispatch: {}
    pull_request:
        types: [opened, synchronize]
        branches:
            - master

        paths-ignore:
            - 'assets/**'
            - .dockerignore
            - .gitignore
            - '**.md'
            - LICENSE
            - renovate.json
    push:
        branches:
            - 'issue/gh-**'
            - 'feat/**'
            - master

        paths-ignore:
            - '.github/**'
            - '.coder/**'
            - '.vscode/**'
            - 'assets/**'
            - '.*ignore'
            - '**.md'
            - LICENSE
            - renovate.json
permissions:
    contents: read
    checks: write
concurrency:
    group: ${{github.workflow}}-${{github.ref}}
    cancel-in-progress: true
jobs:
    rust:
        name: "Rust / ${{matrix.runner == 'ubuntu-24.04' && 'Linux (x64)' || matrix.runner == 'linux-aarch64' && 'Linux (aarch64)' || matrix.runner == 'macos-latest' && 'macOS (x64)' || matrix.runner == 'macos-14-xlarge' && 'macOS (aarch64)' || matrix.runner == 'windows-latest' && 'Windows (x64)'}}"
        runs-on: ${{matrix.runner}}
        strategy:
            fail-fast: true
            matrix:
                runner: [windows-latest, macos-latest, ubuntu-24.04]
        steps:
            - uses: actions/checkout@v4
            - uses: dtolnay/rust-toolchain@nightly
            - uses: Swatinem/rust-cache@v2
            - run: .ci/windows/Setup.ps1
              if: matrix.runner == 'windows-latest'
              id: vcpkg

            - uses: actions/cache@v4
              if: matrix.runner == 'windows-latest'
              with:
                key: vcpkg-cache
                path: |
                    ${{env.VCPKG_ROOT}}

            - if: matrix.runner == 'windows-latest'
              uses: ilammy/setup-nasm@v1

            - run: cargo build --all-features
    cargo-deny:
        name: '`cargo deny`'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: taiki-e/install-action@cargo-deny
              with:
                  tool: cargo-deny

            - run: cargo deny check all
    report-missing-deps:
        name: Report Missing Dependencies
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: taiki-e/install-action@cargo-machete
              with:
                  tool: cargo-machete

            - run: cargo machete
    clippy:
        name: Clippy
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: dtolnay/rust-toolchain@master
              with:
                toolchain: stable
                components: clippy, rustfmt

            - uses: Swatinem/rust-cache@v2
            - uses: auguwu/clippy-action@1.4.0
              with:
                token: ${{secrets.GITHUB_TOKEN}}
