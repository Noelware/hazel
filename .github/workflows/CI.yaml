# ðŸª¶ hazel: Minimal, and easy HTTP proxy to map storage provider items into HTTP endpoints
# Copyright 2022-2024 Noelware, LLC. <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI
on:
    workflow_dispatch: {}
    pull_request:
        types: [opened, synchronize]
        branches:
            - master

        paths-ignore:
            - 'assets/**'
            - .dockerignore
            - .gitignore
            - '**.md'
            - LICENSE
            - renovate.json
    push:
        branches:
            - 'issue/gh-**'
            - 'feat/**'
            - master

        paths-ignore:
            - '.github/**'
            - '.coder/**'
            - '.vscode/**'
            - 'assets/**'
            - '.*ignore'
            - '**.md'
            - LICENSE
            - renovate.json
permissions:
    checks: write
jobs:
    rust:
        name: Rust CI [${{matrix.rust-version}} on ${{matrix.runner == 'ubuntu-latest' && 'Linux (x86_64)' || matrix.runner == 'windows-latest' && 'Windows' || matrix.runner == 'macos-latest' && 'macOS' || matrix.runner == 'self-hosted' && 'Linux (arm64)' || matrix.runner}}]
        runs-on: ${{matrix.runner}}
        strategy:
            matrix:
                rust-version: [stable, nightly]
                runner: [ubuntu-latest, windows-latest, macos-latest]
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Rust toolchain
              uses: dtolnay/rust-toolchain@master
              with:
                toolchain: ${{matrix.rust-version}}
                components: clippy, rustfmt

            - name: Setup Rust cache
              uses: Swatinem/rust-cache@v2

            - name: Pull dependencies
              run: cargo build
    clippy:
        name: Clippy
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Rust toolchain
              uses: dtolnay/rust-toolchain@master
              with:
                toolchain: stable
                components: clippy, rustfmt

            - name: Setup Rust cache
              uses: Swatinem/rust-cache@v2

            - name: Clippy!
              uses: auguwu/clippy-action@1.3.0
              with:
                all-features: true
                token: ${{secrets.GITHUB_TOKEN}}
