# ðŸª¶ Hazel: Minimal, and fast HTTP proxy to host files from any cloud storage provider.
# Copyright 2022-2023 Noelware <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[versions]
spring-security-crypto = "6.1.1"
kotlinx-serialization = "1.5.1"
apache-commons-lang3 = "3.12.0"
kotlinx-coroutines = "1.7.2"
kotlinx-atomicfu = "0.18.5"
kotlinx-datetime = "0.4.0"
logstash-logback = "7.4"
prometheus-java = "0.16.0"
analytics-jvm = "0.1.4-beta"
noel-commons = "2.5.1"
ktor-routing = "0.4.1-beta"
bouncycastle = "1.75"
mordant = "2.0.0"
logback = "1.4.8"
janino = "3.1.10"
sentry = "6.25.2"
okhttp = "4.10.0"
clikt = "4.0.0"
slf4j = "2.0.7"
grpc = "1.56.1"
koin = "3.4.2"
kaml = "0.54.0"
remi = "0.5.4-beta"
ktor = "2.3.2"

[libraries]
# kotlinx libraries
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-coroutines-debug = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-debug", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

# slf4j libraries
slf4j-over-log4j = { module = "org.slf4j:log4j-over-slf4j", version.ref = "slf4j" }
slf4j-over-jcl = { module = "org.slf4j:jcl-over-slf4j", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }

# noel utilities
noel-commons-extensions-kotlin = { module = "dev.floofy.commons:extensions-kotlin", version.ref = "noel-commons" }
noel-commons-extensions-koin = { module = "dev.floofy.commons:extensions-koin", version.ref = "noel-commons" }
noel-commons-java-utils = { module = "dev.floofy.commons:java-utils", version.ref = "noel-commons" }
noel-commons-slf4j = { module = "dev.floofy.commons:slf4j", version.ref = "noel-commons" }

# apache utilities
apache-commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "apache-commons-lang3" }

# remi libraries
remi-storage-azure = { module = "org.noelware.remi:remi-storage-azure", version.ref = "remi" }
remi-storage-gcs = { module = "org.noelware.remi:remi-storage-gcs", version.ref = "remi" }
remi-storage-s3 = { module = "org.noelware.remi:remi-storage-s3", version.ref = "remi" }
remi-storage-fs = { module = "org.noelware.remi:remi-storage-fs", version.ref = "remi" }
remi-core = { module = "org.noelware.remi:remi-core", version.ref = "remi" }

# sentry libraries
sentry-kotlin-extensions = { module = "io.sentry:sentry-kotlin-extensions", version.ref = "sentry" }
sentry-logback = { module = "io.sentry:sentry-logback", version.ref = "sentry" }
sentry = { module = "io.sentry:sentry", version.ref = "sentry" }

# ktor server and client libraries
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-auto-head-response = { module = "io.ktor:ktor-server-auto-head-response", version.ref = "ktor" }
ktor-server-default-headers = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-double-receive = { module = "io.ktor:ktor-server-double-receive", version.ref = "ktor" }
ktor-server-ratelimiting = { module = "io.ktor:ktor-server-rate-limit", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }

# logback libraries
logback-logstash = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash-logback" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logback-core = { module = "ch.qos.logback:logback-core", version.ref = "logback" }

# noelware's ktor routing
noelware-ktor-routing-loaders-koin = { module = "org.noelware.ktor:ktor-routing-loader-koin", version.ref = "ktor-routing" }
noelware-ktor-routing-core = { module = "org.noelware.ktor:ktor-routing-core", version.ref = "ktor-routing" }

# prometheus
prometheus-simpleclient-hotspot = { module = "io.prometheus:simpleclient_hotspot", version.ref = "prometheus-java" }
prometheus-simpleclient-common = { module = "io.prometheus:simpleclient_common", version.ref = "prometheus-java" }
prometheus-simpleclient = { module = "io.prometheus:simpleclient", version.ref = "prometheus-java" }

# grpc
grpc-services = { module = "io.grpc:grpc-services", version.ref = "grpc" }

# noelware analytics
noelware-analytics-server-kotlin-support = { module = "org.noelware.analytics:analytics-kotlin-support-server", version.ref = "analytics-jvm" }
noelware-analytics-server = { module = "org.noelware.analytics:analytics-server", version.ref = "analytics-jvm" }

# external libraries
spring-security-crypto = { module = "org.springframework.security:spring-security-crypto", version.ref = "spring-security-crypto" }
bouncycastle = { module = "org.bouncycastle:bcpkix-jdk15to18", version.ref = "bouncycastle" }
mordant = { module = "com.github.ajalt.mordant:mordant", version.ref = "mordant" }
janino = { module = "org.codehaus.janino:janino", version.ref = "janino" }
clikt = { module = "com.github.ajalt.clikt:clikt", version.ref = "clikt" }
koin = { module = "io.insert-koin:koin-core", version.ref = "koin" }
kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }