<!--
~ ðŸª¶ hazel: Minimal, simple, and open source content delivery network made in Kotlin
~ Copyright 2022 Noel <cutie@floofy.dev>
~
~ Licensed under the Apache License, Version 2.0 (the "License");
~ you may not use this file except in compliance with the License.
~ You may obtain a copy of the License at
~
~     http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing, software
~ distributed under the License is distributed on an "AS IS" BASIS,
~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~ See the License for the specific language governing permissions and
~ limitations under the License.
-->

<configuration debug="false" packagingData="true">
    <statusListener class="ch.qos.logback.core.status.NopStatusListener" />
    <property resource="config/logging.properties" />
    <property resource="${dev.floofy.hazel.logback.config}" />

    <appender name="Console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>[%d{yyyy-MM-dd | HH:mm:ss, +10}] %boldCyan([%thread]) %highlight([%logger{36}]) %boldMagenta(%-5level) :: %msg%n</pattern>
        </encoder>
    </appender>

    <if condition='property("hazel.encoders").contains("sentry")'>
        <then>
            <appender name="Sentry" class="io.sentry.logback.SentryAppender">
                <options>
                    <dsn>${hazel.dsn}</dsn>
                </options>
            </appender>
        </then>
    </if>

    <if condition='property("hazel.encoders").contains("logstash")'>
        <then>
            <appender name="Logstash" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
                <destination>${hazel.logstash.endpoint}</destination>
                <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                    <providers>
                        <timestamp />
                        <message />
                        <loggerName />
                        <threadName />
                        <logLevel />
                        <callerData />
                        <stackTrace />
                        <contextName />
                        <mdc />
                        <tags />
                        <logstashMarkers />
                        <throwableClassName />
                        <throwableMessage />
                        <throwableRootCauseClassName />
                        <throwableRootCauseMessage />
                        <includeMdcKeyName>user_agent</includeMdcKeyName>
                    </providers>

                    <customFields>{"product":"hazel","vendor":"Noel"}</customFields>
                </encoder>

                <keepAliveDuration>5 minutes</keepAliveDuration>
                <writeVersionAsInteger>true</writeVersionAsInteger>
            </appender>
        </then>
    </if>

    <if condition='property("hazel.encoders").contains("sentry")'>
        <then>
            <root level="ERROR">
                <appender-ref ref="Sentry" />
            </root>
        </then>
    </if>

    <if condition='isDefined("hazel.debug")'>
        <then>
            <logger name="dev.floofy.hazel" level="debug" additivity="false">
                <appender-ref ref="Console" />

                <if condition='property("hazel.encoders").contains("logstash")'>
                    <then>
                        <appender-ref ref="Logstash" />
                    </then>
                </if>
            </logger>

            <root level="DEBUG">
                <appender-ref ref="Console" />

                <if condition='property("hazel.encoders").contains("logstash")'>
                    <then>
                        <appender-ref ref="Logstash" />
                    </then>
                </if>
            </root>
        </then>
        <else>
            <logger name="dev.floofy.hazel" level="info" additivity="false">
                <appender-ref ref="Console" />

                <if condition='property("hazel.encoders").contains("logstash")'>
                    <then>
                        <appender-ref ref="Logstash" />
                    </then>
                </if>
            </logger>

            <root level="INFO">
                <appender-ref ref="Console" />

                <if condition='property("hazel.encoders").contains("logstash")'>
                    <then>
                        <appender-ref ref="Logstash" />
                    </then>
                </if>
            </root>
        </else>
    </if>
</configuration>
